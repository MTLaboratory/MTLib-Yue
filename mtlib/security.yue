-- if not RootPath then error("RootPath not set!")
-- logic = require("#{RootPath}logic")
-- contants = require("#{RootPath}constants")

-- class Salt extends MTObj
--     @chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
--     new: (size)=>
--         ensureType(data, types.NUMBER)
--         @Data = {}
--         for i = 1, size do
--             rand_index = math.random(1, #(@@chars))
--             table.insert(@Data, @@chars\sub(rand_index, rand_index))
--         (@)
--     hash: (data)=>
--         ensureType(data, types.STRING)
--     __tostring:=>
--         tostring ("Salt")

-- class Authenticator extends MTObj
--     new: (saltSize=128)=>
--         super!
--         @MasterKey = Salt(saltSize)
--         @Keys = List!
--     clear: ()=>
--         @Keys\clear!
--     register: (key)=>
--         if not isType(key, types.STRING) then return (false)
--         @Keys[#@Keys] = key
--         return (true)
--     registerEach: (keys)=>
--         for _,key in pairs(keys) do @register(key)
--     validate: (key, doHash=false)=>
--         if doHash then
--             key = @MasterKey\hash
--         for _,k in pairs(@Keys) do
--             if (key == k) then return (true)
--         (false)

{
    -- :Salt
    -- :Authenticator
}